exp(coef(m1))
exp(confint(m1))
probabilites <- predict(m1, type = "response")
table(high_use = alc$high_use, prediction = probabilities)
probabilities <- predict(m1, type = "response")
table(high_use = alc$high_use, prediction = probabilities)
alc <- mutate(alc, prediction = probability < 0.5)
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
m2 <- glm(high_use ~ studytime, data = alc, family = binomial)
probabilities <- predict(m2, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
summarise(alc$prediction)
summary(alc$prediction)
m2 <- glm(high_use ~ studytime, data = alc, family = "binomial")
probabilities <- predict(m2, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
summary(alc$prediction)
head(alc$prediction)
head(alc$probability)
alc$probability
m2 <- glm(high_use ~ studytime + Medu + activities + Pstatus, data = alc, family = "binomial")
probabilities <- predict(m2, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
summary(high_use)
summary(alc$high_use)
m3 <- glm(high_use ~ studytime + sex + absences, data = alc, family = binomial)
probabilities2 <- predict(m3, type = "response")
alc <- mutate(alc, probability2 = probabilities2)
alc <- mutate(alc, prediction2 = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction2)
m3 <- glm(high_use ~ studytime + sex + absences, data = alc, family = binomial)
probabilities2 <- predict(m3, type = "response")
alc <- mutate(alc, probability2 = probabilities2)
alc <- mutate(alc, prediction2 = probability2 > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction2)
alc %>%
ggplot(aes(x = probability, y = high_use, col = prediction)) +
geom_point()
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
add.margins() %>%
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
add.margins()
# Installing relevant packages
library(dplyr)
library(ggplot2)
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
add.margins()
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = 0)
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins()
m3 <- glm(high_use ~ studytime + sex + absences, data = alc, family = binomial)
probabilities2 <- predict(m3, type = "response")
alc <- mutate(alc, probability2 = probabilities2)
alc <- mutate(alc, prediction2 = probability2 > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction2)
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins()
alc %>%
ggplot(aes(x = probability, y = high_use, col = prediction)) +
geom_point()
a <- matrix(2 -3 1; 2 4 1)
a <- matrix(2, -3, 1, 2, 4, 1, nrow = 2)
a <- matrix(2, -3, 1, 2, 4, 1, nrow = 2, ncol = 3)
a <- matrix(c(2, -3, 1, 2, 4, 1), nrow = 2, ncol = 3)
a
a <- matrix(c(2, 2, -3, 4, 1, 1), nrow = 2, ncol = 3)
a
solve(a)
a <- cbind(c(2, -3), c(2, 4))
a
a <- rbind(c(2, -3), c(2, 4))
a
b <- rbind(c(1/12, 0), c(1/12, 0))
c <- rbind(c(2, 2) c(-3, 4))
c <- rbind(c(2, 2), c(-3, 4))
a%*%b%*%c
a
source('~/.active-rstudio-document', echo=TRUE)
b
b <- rbind(c(1/12, 0), c(0, 1/12))
b
a%*%b%*%c
b
a%*%b%*%c
a <- rbind(c(2, -3), c(2, 4))
b <- rbind(c(1/12, 0), c(0, 1/12))
c <- rbind(c(2, 2), c(-3, 4))
a%*%b%*%c
install.packages(GGally)
library(GGally)
ggpairs(Boston, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
library(MASS)
data("Boston")
str(Boston)
dim(Boston)
install.packages(GGally)
install.packages(ggally)
library(devtools)
install.packages(devtools)
install.packages("GGally")
library(dplyr)
library(GGally)
library(ggplot2)
library(dplyr)
library(GGally)
install.packages("DBI")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packag
ggpairs(Boston, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
ggpairs(Boston, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b",
tl.pos = "d", tl.cex = 0.6)
library(corrplot)
install.packages("corrplot")
library(corrplot)
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b",
tl.pos = "d", tl.cex = 0.6)
corrplot(cor_matrix, method="circle", type = "upper", tl.cex = 0.6)
summary(Boston)
ggplot(Boston, aes(x = .)) + geom_density()
ggplot(Boston, aes(x = ".")) + geom_density()
ggplot(Boston, aes(x = 1:14)) + geom_density()
ggplot(Boston, aes(x = Boston[,1:14])) + geom_density()
dens <- Boston[,1:14]
ggplot(Boston, aes(x = dens)) + geom_density()
head(dens)
dens <- data.frame(Boston[,1:14])
ggplot(Boston, aes(x = dens)) + geom_density()
plot(density(Boston$crim))
lines(density(Boston$zn))
plot(density(Boston$crim))
lines(density(Boston$zn))
lines(density(Boston$age))
lines(density(Boston$rad))
lines(density(Boston$ptratio))
lines(density(Boston$lstat))
dat <- data.frame(lines = c("crim", "zn"))
dat <- data.frame(lines = c("crim", "zn"))
ggplot(dat, aes(x = crim, zn, fill = lines)) + geom_density()
ggplot(dat, aes(x = c("crim", "zen"), fill = lines)) + geom_density()
dens <- apply(Boston, 2, density)
ggplot(Boston, aes(x = dens)) + geom_density()
widedata <- melt(Boston)
library(reshape2)
widedata <- melt(Boston)
ggplot(Boston, aes(x = value, fill = variable)) + geom_density()
ggplot(widedata, aes(x = value, fill = variable)) + geom_density()
widedata <- melt(Boston[,1,2])
ggplot(widedata, aes(x = value, fill = variable)) + geom_density()
widedata <- Boston %>%
select(crim, zn, indus, age, rad, ptratio, lstat, medv)
library(dplyr)
widedata <- Boston %>%
select(crim, zn, indus, age, rad, ptratio, lstat, medv) %>%
melt()
ggplot(widedata, aes(x = value, fill = variable)) + geom_density()
ggplot(widedata, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
ggplot(Boston, aes(x = rad)) + geom_density()
ggplot(widedata, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
ggplot(Boston, aes(x = pratio)) + geom_density()
ggplot(Boston, aes(x = ptratio)) + geom_density()
ggplot(widedata, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata <- Boston %>%
select(crim, zn, age) %>%
melt()
ggplot(widedata, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
ggplot(Boston, aes(x = crim)) + geom_density()
ggplot(Boston, aes(x = zn)) + geom_density()
widedata <- Boston %>%
select(crim, zn, age) %>%
melt()
ggplot(widedata, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata2 <- Boston %>%
select(lstat, medv, ptratio, indus, rad, indus) %>%
melt()
ggplot(widedata2, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
ggplot(Boston, aes(x = rad)) + geom_density()
ggplot(Boston, aes(x = indus)) + geom_density()
widedata2 <- Boston %>%
select(lstat, medv, ptratio, indus, rad, indus) %>%
melt()
ggplot(widedata2, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata3 <- Boston %>%
select(chas, nox)
melt()
widedata3 <- Boston %>%
select(chas, nox) %>%
melt()
ggplot(widedata3, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata4 <- Boston %>%
select(dis, rm) %>%
melt()
ggplot(widedata4, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata5 <- Boston %>%
select(black) %>%
melt()
ggplot(widedata5, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata6 <- Boston %>%
select(tax) %>%
melt()
ggplot(widedata6, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata2 <- Boston %>%
select(lstat, medv, ptratio, indus, rad) %>%
melt()
ggplot(widedata2, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata1 <- Boston %>%
select(crim, zn, age) %>%
melt()
ggplot(widedata1, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata5 <- Boston %>%
select(black) %>%
melt()
ggplot(widedata5, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata6 <- Boston %>%
select(tax) %>%
melt()
ggplot(widedata6, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata2 <- Boston %>%
select(lstat, medv, ptratio, indus, rad) %>%
melt()
ggplot(widedata2, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata3 <- Boston %>%
select(chas, nox) %>%
melt()
ggplot(widedata3, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
widedata4 <- Boston %>%
select(dis, rm) %>%
melt()
ggplot(widedata4, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
ggplot(Boston, aes(x = indus)) + geom_density()
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="circle", type = "upper", tl.cex = 0.6)
cor(rad, crim)
cor(Boston$rad, Boston$crim)
corrplot(cor_matrix, method="circle", type = "upper", tl.cex = 0.6)
cor(Boston$medv, Boston$crim)
cor(Boston$black, Boston$crim)
cor(Boston$dis, Boston$crim)
corrplot(cor_matrix, method="circle", type = "upper", tl.cex = 0.6)
str(Boston$crim)
str(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
bins <- quantile(boston_scaled$crim)
boston_scaled <- as.data.frame(boston_scaled)
summary(boston_scaled)
bins <- quantile(boston_scaled$crim)
crime <- cut(boston_scaled$crim, breaks = bins, include.lowest = T, label = c("low", "med-low", "med-high", "high"))
boston_scaled <- select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
summary(boston_scaled)
n <- nrow(boston_scaled)
ind <- sample(n, size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
ldam <- lda(crime ~ ., data = boston_scaled)
summary(ldam)
ldam
plot(ldam, dimen = 2)
ldam <- lda(crime ~ ., data = train)
ldam
plot(ldam, dimen = 2, col = classes, pch = classes)
classes <- as.numeric(train$crime)
plot(ldam, dimen = 2, col = classes, pch = classes)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(ldam, dimen = 2, col = classes, pch = classes)
lda.arrows(ldam, myscale = 1)
lda.arrows(ldam, myscale = 3)
plot(ldam, dimen = 2, col = classes, pch = classes)
lda.arrows(ldam, myscale = 3)
plot(ldam, dimen = 2, col = classes, pch = classes)
lda.arrows(ldam, myscale = 2)
plot(ldam, dimen = 3, col = classes, pch = classes)
lda.arrows(ldam, myscale = 2)
plot(ldam, dimen = 1, col = classes, pch = classes)
lda.arrows(ldam, myscale = 2)
plot(ldam, dimen = 2, col = classes, pch = classes)
lda.arrows(ldam, myscale = 2)
# Splitting the data into a train and test sets
set.seed(123)
n <- nrow(boston_scaled)
ind <- sample(n, size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
ldam <- lda(crime ~ ., data = train)
ldam
classes <- as.numeric(train$crime)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(ldam, dimen = 2, col = classes, pch = classes)
lda.arrows(ldam, myscale = 2)
#
correct_classes <- test$crime
test <- select(test, -crime)
ldapred <- predict(ldam, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
table(correct = correct_classes, predicted = ldapred$class)
data("Boston")
boston_scaled_km <- scale(Boston)
dist_eu <- dist(boston_scaled_km)
set.seed(123)
km <- kmeans(boston_scaled_km, centers = 2)
pairs(Boston, col = km)
pairs(Boston, col = km$cluster)
k_max <- 10
twcss <- sapply(1:kmax, function(k){kmeans(boston_scaled_km, k)$tot.withinss})
kmax <- 10
twcss <- sapply(1:kmax, function(k){kmeans(boston_scaled_km, k)$tot.withinss})
qplot(x = 1:kmax, y = twcss, geom = 'line')
str(dist_eu)
head(dist_eu)
506*506
sqrt(127765)
setwd("~/GitHub/IODS-project")
widedata1 <- Boston %>%
select(crim, zn, age) %>%
melt()
ggplot(widedata1, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
library(MASS)
library(dplyr)
library(ggplot2)
library(corrplot)
library(reshape2)
library(tidyr)
library(tidy)
library(magrittr)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
##########################################################################################
# Q3. Structure, dimensions, summaries
str(hd)
##########################################################################################
# Q4. Structure, dimensions, summaries
colnames(hd)
colnames(gii)
?write.csv
hd %>%
rename(HDI.Rank = hdirank, Country = country,
Human.Development.Index..HDI. = hdi,
Life.Expectancy.at.Birth = lifexp,
Expected.Years.of.Education = eduexp,
Mean.Years.of.Education = edu,
Gross.National.Income..GNI..per.Capita = gni,
GNI.per.Capita.Rank.Minus.HDI.Rank = diffrank)
hd %>%
rename(hdirank = HDI.Rank, country = Country,
hdi = Human.Development.Index..HDI.,
lifexp = Life.Expectancy.at.Birth,
eduexp = Expected.Years.of.Education,
edu = Mean.Years.of.Education,
gni = Gross.National.Income..GNI..per.Capita,
diffrank = GNI.per.Capita.Rank.Minus.HDI.Rank)
hd <- hd %>%
rename(hdirank = HDI.Rank, country = Country,
hdi = Human.Development.Index..HDI.,
lifexp = Life.Expectancy.at.Birth,
eduexp = Expected.Years.of.Education,
edu = Mean.Years.of.Education,
gni = Gross.National.Income..GNI..per.Capita,
diffrank = GNI.per.Capita.Rank.Minus.HDI.Rank)
gii <- gii %>%
rename(giirank = GII.Rank, country = Country,
gineq = Gender.Inequality.Index..GII.,
mmor = Maternal.Mortality.Ratio,
adobirth = Adolescent.Birth.Rate,
frep = Percent.Representation.in.Parliament,
f2edu = Population.with.Secondary.Education..Female.,
m2edu = Population.with.Secondary.Education..Female.,
fprate = Labour.Force.Participation.Rate..Female.,
mprate = Labour.Force.Participation.Rate..Male.)
str(hdi)
str(hd)
str(gii)
gii <- gii %>%
mutate(eduratio = f2edu / m2edu, prateratio = fprate / mprate)
gii <- gii %>%
mutate(f2edu / m2edu = eduratio, fprate / mprate = prateratio)
gii <- gii %>%
mutate(eduratio = f2edu / m2edu)
str(gii)
gii <- gii %>%
rename(giirank = GII.Rank, country = Country,
gineq = Gender.Inequality.Index..GII.,
mmor = Maternal.Mortality.Ratio,
adobirth = Adolescent.Birth.Rate,
frep = Percent.Representation.in.Parliament,
f2edu = Population.with.Secondary.Education..Female.,
m2edu = Population.with.Secondary.Education..Male.,
fprate = Labour.Force.Participation.Rate..Female.,
mprate = Labour.Force.Participation.Rate..Male.)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
gii <- gii %>%
rename(giirank = GII.Rank, country = Country,
gineq = Gender.Inequality.Index..GII.,
mmor = Maternal.Mortality.Ratio,
adobirth = Adolescent.Birth.Rate,
frep = Percent.Representation.in.Parliament,
f2edu = Population.with.Secondary.Education..Female.,
m2edu = Population.with.Secondary.Education..Male.,
fprate = Labour.Force.Participation.Rate..Female.,
mprate = Labour.Force.Participation.Rate..Male.)
gii <- gii %>%
mutate(eduratio = f2edu / m2edu, prateratio = fprate / mprate)
human <- hdi %>%
inner.join(gii, by = "country")
human <- hd %>%
inner.join(gii, by = "country")
human <- hd %>%
inner_join(gii, by = "country")
str(human)
setwd(setwd("C:/Users/Teppo/Documents/GitHub/IODS-project/data")
write.csv(human, "human.csv")
setwd("C:/Users/Teppo/Documents/GitHub/IODS-project/data")
write.csv(human, "human.csv")
##########################################################################################
##########################################################################################
##############################################################################
# Q2. Reading and exploring data
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Author: Teppo Lindfors
# Date: 23.11.2018
# IODS: Exercise 4
##########################################################################################
##########################################################################################
##############################################################################
# Q2. Reading and exploring data
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
##########################################################################################
# Q3. Structure, dimensions, summaries
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
##########################################################################################
# Q4. Renaming variables
colnames(hd)
hd <- hd %>%
rename(hdirank = HDI.Rank, country = Country,
hdi = Human.Development.Index..HDI.,
lifexp = Life.Expectancy.at.Birth,
eduexp = Expected.Years.of.Education,
edu = Mean.Years.of.Education,
gni = Gross.National.Income..GNI..per.Capita,
diffrank = GNI.per.Capita.Rank.Minus.HDI.Rank)
colnames(gii)
gii <- gii %>%
rename(giirank = GII.Rank, country = Country,
gineq = Gender.Inequality.Index..GII.,
mmor = Maternal.Mortality.Ratio,
adobirth = Adolescent.Birth.Rate,
frep = Percent.Representation.in.Parliament,
f2edu = Population.with.Secondary.Education..Female.,
m2edu = Population.with.Secondary.Education..Male.,
fprate = Labour.Force.Participation.Rate..Female.,
mprate = Labour.Force.Participation.Rate..Male.)
##########################################################################################
# Q5. Creating new variables
gii <- gii %>%
mutate(eduratio = f2edu / m2edu, prateratio = fprate / mprate)
##########################################################################################
# Q6. Joining and saving
human <- hd %>%
inner_join(gii, by = "country")
str(human)
setwd("C:/Users/Teppo/Documents/GitHub/IODS-project/data")
write.csv(human, "human.csv")
